# BCI E-Library - React Native eBook Library Project Documentation


## рзз. ржкрзНрж░ржЬрзЗржХрзНржЯ ржУржнрж╛рж░ржнрж┐ржЙ (Project Overview)

**BCI E-Library** ржПржХржЯрж┐ React Native CLI ржжрж┐ржпрж╝рзЗ рждрзИрж░рж┐ ржХрж░рж╛ eBook рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржиред ржПржЗ ржЕрзНржпрж╛ржкрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░рж╛:
тАв ржмржЗ ржЦрзБржБржЬрждрзЗ ржкрж╛рж░рзЗ ржПржмржВ ржкржбрж╝рждрзЗ ржкрж╛рж░рзЗ
тАв ржкржЫржирзНржжрзЗрж░ ржмржЗржЧрзБрж▓рзЛ ржлрзЗржнрж╛рж░рж┐ржЯрзЗ рж╕рзЗржн ржХрж░рждрзЗ ржкрж╛рж░рзЗ  
тАв ржбрж╛рж░рзНржХ/рж▓рж╛ржЗржЯ ржерж┐ржо ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗ
тАв appwrite ржмрзНржпрж╛ржХржПржирзНржб рж╕рж╛рж░рзНржнрж┐рж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржбрзЗржЯрж╛ рж╕рзНржЯрзЛрж░ ржХрж░рзЗ
тАв PDF ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржПржмржВ ржнрж┐ржЙ ржХрж░рждрзЗ ржкрж╛рж░рзЗ

## рзи. ржлрзЛрж▓рзНржбрж╛рж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ (Folder Structure)

**ЁЯУБ android/** - Android ржЕрзНржпрж╛ржк ржмрж┐рж▓рзНржб ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
**ЁЯУБ ios/** - iOS ржЕрзНржпрж╛ржк ржмрж┐рж▓рзНржб ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи  
**ЁЯУБ screens/** - ржЕрзНржпрж╛ржкрзЗрж░ рж╕ржм рж╕рзНржХрзНрж░рж┐ржи (HomeScreen, AuthScreen, etc.)
**ЁЯУБ components/** - ржкрзБржирж░рзНржмрзНржпржмрж╣рж╛рж░ржпрзЛржЧрзНржп ржХржорзНржкрзЛржирзЗржирзНржЯ (CustomTabBar, FilterModal)
**ЁЯУБ services/** - API рж╕рж╛рж░рзНржнрж┐рж╕ ржлрж╛ржВрж╢ржи (bookService, authService)
**ЁЯУБ context/** - React Context API (AuthContext, ThemeContext)
**ЁЯУБ hooks/** - ржХрж╛рж╕рзНржЯржо React Hooks (useAuth, useBookFilters)
**ЁЯУБ lib/** - рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи (appwrite.js)
**ЁЯУБ constants/** - ржХржирж╕рзНржЯрзНржпрж╛ржирзНржЯ ржнрзНржпрж╛рж▓рзБ (Config.js)

## рзй. ржорзВрж▓ ржХржорзНржкрзЛржирзЗржирзНржЯрж╕ржорзВрж╣ (Key Components)

### App.jsx (ржорзВрж▓ ржЕрзНржпрж╛ржк ржХржорзНржкрзЛржирзЗржирзНржЯ)
- **ржХрж┐ ржХрж░рзЗ:** ржЕрзНржпрж╛ржкрзЗрж░ ржорзВрж▓ ржПржирзНржЯрзНрж░рж┐ ржкржпрж╝рзЗржирзНржЯ ржПржмржВ рж░рзБржЯрж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** рж╕ржм ржкрзНрж░рзЛржнрж╛ржЗржбрж╛рж░ (ThemeProvider, AuthProvider) ржПржмржВ ржирзЗржнрж┐ржЧрзЗрж╢ржи рж╕рзЗржЯржЖржк ржХрж░рзЗ
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:** 
  тАв Context API ржжрж┐ржпрж╝рзЗ ржерж┐ржо ржПржмржВ ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
  тАв Stack Navigator ржжрж┐ржпрж╝рзЗ рж╕рзНржХрзНрж░рж┐ржи ржирзЗржнрж┐ржЧрзЗрж╢ржи ржХрж░рзЗ
  тАв ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи рж╕рзНржЯрзЗржЯ ржЕржирзБржпрж╛ржпрж╝рзА рж╕рзНржХрзНрж░рж┐ржи ржжрзЗржЦрж╛ржпрж╝ (Auth/VerifyEmail/MainTabs)
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржХрзЛржб:**
```javascript
export default function App() {
  return (
    <ThemeProvider>
      <AuthProvider>
        <AppContent />
      </AuthProvider>
    </ThemeProvider>
  );
}
```

### AuthContext.jsx (ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи ржХржиржЯрзЗржХрзНрж╕ржЯ)
- **ржХрж┐ ржХрж░рзЗ:** ржкрзБрж░рзЛ ржЕрзНржпрж╛ржкрзЗ ржЗржЙржЬрж╛рж░ ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** 
  тАв ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи/рж▓ржЧржЖржЙржЯ рж╕рзНржЯрзЗржЯ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛рж░ ржЬржирзНржп
  тАв рж╕ржм рж╕рзНржХрзНрж░рж┐ржирзЗ ржЗржЙржЬрж╛рж░ ржбрзЗржЯрж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп
  тАв Props drilling ржПржбрж╝рж╛ржирзЛрж░ ржЬржирзНржп
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв Appwrite API ржХрж▓ ржХрж░рзЗ ржЗржЙржЬрж╛рж░ ржбрзЗржЯрж╛ ржлрзЗржЪ ржХрж░рзЗ
  тАв useState ржжрж┐ржпрж╝рзЗ user ржПржмржВ loading рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
  тАв login, logout, register ржлрж╛ржВрж╢ржи ржкрзНрж░ржжрж╛ржи ржХрж░рзЗ
  тАв useEffect ржжрж┐ржпрж╝рзЗ ржЕрзНржпрж╛ржк рж╢рзБрж░рзБрждрзЗ ржЗржЙржЬрж╛рж░ ржЪрзЗржХ ржХрж░рзЗ
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж╛ржВрж╢ржи:**
```javascript
const login = useCallback(async (email, password) => {
  await account.createEmailPasswordSession(email, password);
  const currentUser = await account.get();
  setUser(mapAppwriteUser(currentUser));
});
```

### HomeScreen.jsx (рж╣рзЛржо рж╕рзНржХрзНрж░рж┐ржи)
- **ржХрж┐ ржХрж░рзЗ:** ржЕрзНржпрж╛ржкрзЗрж░ ржорзВрж▓ рж╕рзНржХрзНрж░рж┐ржи ржпрзЗржЦрж╛ржирзЗ ржмржЗржпрж╝рзЗрж░ рж▓рж┐рж╕рзНржЯ ржжрзЗржЦрж╛ржпрж╝
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** 
  тАв ржЗржЙржЬрж╛рж░ ржпрж╛рждрзЗ ржмржЗ ржЦрзБржБржЬрждрзЗ ржкрж╛рж░рзЗ
  тАв рж╕рж╛рж░рзНржЪ ржПржмржВ ржлрж┐рж▓рзНржЯрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЗ
  тАв ржмржЗржпрж╝рзЗрж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрждрзЗ ржкрж╛рж░рзЗ
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв bookService ржерзЗржХрзЗ ржбрзЗржЯрж╛ рж▓рзЛржб ржХрж░рзЗ
  тАв FlatList ржжрж┐ржпрж╝рзЗ ржмржЗржпрж╝рзЗрж░ рж▓рж┐рж╕рзНржЯ ржжрзЗржЦрж╛ржпрж╝
  тАв useState ржжрж┐ржпрж╝рзЗ books, loading, query рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
  тАв FilterModal ржжрж┐ржпрж╝рзЗ ржлрж┐рж▓рзНржЯрж╛рж░ ржЕржкрж╢ржи ржжрзЗржпрж╝
  тАв useFocusEffect ржжрж┐ржпрж╝рзЗ рж╕рзНржХрзНрж░рж┐ржи ржлрзЛржХрж╛рж╕рзЗ ржбрзЗржЯрж╛ рж░рж┐ржлрзНрж░рзЗрж╢ ржХрж░рзЗ
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рж╕рзНржЯрзЗржЯ:**
```javascript
const [books, setBooks] = useState([]);
const [loading, setLoading] = useState(false);
const [query, setQuery] = useState('');
const [filterOpen, setFilterOpen] = useState(false);
```

### CustomTabBar.jsx (ржХрж╛рж╕рзНржЯржо ржЯрзНржпрж╛ржм ржмрж╛рж░)
- **ржХрж┐ ржХрж░рзЗ:** ржЕрзНржпрж╛ржкрзЗрж░ ржирж┐ржЪрзЗрж░ ржХрж╛рж╕рзНржЯржо ржЯрзНржпрж╛ржм ржмрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗ
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** 
  тАв рж╕рзБржирзНржжрж░ UI ржПржмржВ рж╕рзНржорзБрже ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи
  тАв ржбрж╛рж░рзНржХ/рж▓рж╛ржЗржЯ ржерж┐ржо рж╕рж╛ржкрзЛрж░рзНржЯ
  тАв ржЗржЙржЬрж╛рж░ ржПржХрзНрж╕ржкрзЗрж░рж┐ржпрж╝рзЗржирзНрж╕ ржЙржирзНржиржд ржХрж░рж╛рж░ ржЬржирзНржп
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв Animated API ржжрж┐ржпрж╝рзЗ ржЯрзНржпрж╛ржм ржЗржиржбрж┐ржХрзЗржЯрж░ ржЕрзНржпрж╛ржирж┐ржорзЗржЯ ржХрж░рзЗ
  тАв useRef ржжрж┐ржпрж╝рзЗ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи ржнрзНржпрж╛рж▓рзБ рж╕рзНржЯрзЛрж░ ржХрж░рзЗ
  тАв Dimensions API ржжрж┐ржпрж╝рзЗ рж╕рзНржХрзНрж░рж┐ржи рж╕рж╛ржЗржЬ ржкрж╛ржпрж╝
  тАв Ionicons ржжрж┐ржпрж╝рзЗ ржЖржЗржХржи ржжрзЗржЦрж╛ржпрж╝
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж┐ржЪрж╛рж░:**
```javascript
const indicatorAnim = useRef(new Animated.Value(0)).current;
Animated.spring(indicatorAnim, {
  toValue: targetPosition,
  useNativeDriver: false,
  friction: 7,
  tension: 80,
}).start();
```

### BookDetailsScreen.jsx (ржмржЗржпрж╝рзЗрж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд рж╕рзНржХрзНрж░рж┐ржи)
- **ржХрж┐ ржХрж░рзЗ:** ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржмржЗржпрж╝рзЗрж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд рждржерзНржп ржжрзЗржЦрж╛ржпрж╝
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** ржЗржЙржЬрж╛рж░ ржпрж╛рждрзЗ ржмржЗ рж╕ржорзНржкрж░рзНржХрзЗ рж╕ржм рждржерзНржп ржЬрж╛ржирждрзЗ ржкрж╛рж░рзЗ
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв route.params ржерзЗржХрзЗ bookId ржирзЗржпрж╝
  тАв bookService ржерзЗржХрзЗ ржмржЗржпрж╝рзЗрж░ ржбрзЗржЯрж╛ рж▓рзЛржб ржХрж░рзЗ
  тАв PDF ржнрж┐ржЙржпрж╝рж╛рж░рзЗ ржирзЗржнрж┐ржЧрзЗржЯ ржХрж░рж╛рж░ ржЕржкрж╢ржи ржжрзЗржпрж╝
  тАв ржлрзЗржнрж╛рж░рж┐ржЯрзЗ ржпрзЛржЧ ржХрж░рж╛рж░ ржлрж┐ржЪрж╛рж░ ржжрзЗржпрж╝

### PdfViewerScreen.jsx (PDF ржнрж┐ржЙржпрж╝рж╛рж░ рж╕рзНржХрзНрж░рж┐ржи)
- **ржХрж┐ ржХрж░рзЗ:** PDF ржлрж╛ржЗрж▓ ржнрж┐ржЙ ржХрж░рж╛рж░ ржЬржирзНржп
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** ржЗржЙржЬрж╛рж░ ржпрж╛рждрзЗ ржмржЗ ржкржбрж╝рждрзЗ ржкрж╛рж░рзЗ
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв react-native-pdf рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ
  тАв Appwrite Storage ржерзЗржХрзЗ PDF ржлрж╛ржЗрж▓ рж▓рзЛржб ржХрж░рзЗ
  тАв ржкрзЗржЬ ржирзЗржнрж┐ржЧрзЗрж╢ржи ржПржмржВ ржЬрзБржо ржлрж┐ржЪрж╛рж░ ржжрзЗржпрж╝

### AuthScreen.jsx (ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж╕рзНржХрзНрж░рж┐ржи)
- **ржХрж┐ ржХрж░рзЗ:** рж▓ржЧржЗржи ржПржмржВ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж░рзНржо ржжрзЗржЦрж╛ржпрж╝
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** ржЗржЙржЬрж╛рж░ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ рждрзИрж░рж┐ ржПржмржВ рж▓ржЧржЗржи ржХрж░рж╛рж░ ржЬржирзНржп
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв useState ржжрж┐ржпрж╝рзЗ ржлрж░рзНржо рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
  тАв AuthContext ржПрж░ login/register ржлрж╛ржВрж╢ржи ржХрж▓ ржХрж░рзЗ
  тАв ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржПржмржВ рж▓рзЛржбрж┐ржВ рж╕рзНржЯрзЗржЯ ржжрзЗржЦрж╛ржпрж╝
  тАв useMemo ржжрж┐ржпрж╝рзЗ title ржПржмржВ subtitle ржЕржкржЯрж┐ржорж╛ржЗржЬ ржХрж░рзЗ
  тАв KeyboardAvoidingView ржжрж┐ржпрж╝рзЗ ржХрзАржмрзЛрж░рзНржб рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░рзЗ
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж┐ржЪрж╛рж░:**
  тАв **ржбрзБржпрж╝рж╛рж▓ ржорзЛржб:** ржПржХржЗ рж╕рзНржХрзНрж░рж┐ржирзЗ рж▓ржЧржЗржи ржПржмржВ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи
  тАв **ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржнрж┐ржЬрж┐ржмрж┐рж▓рж┐ржЯрж┐:** ржЖржЗржХржи ржжрж┐ржпрж╝рзЗ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржжрзЗржЦрж╛ржирзЛ/рж▓рзБржХрж╛ржирзЛ
  тАв **ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржорзНржпрж╛ржЪрж┐ржВ:** рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржорзНржпрж╛ржЪ ржЪрзЗржХ
  тАв **ржлрж░рзНржо ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи:** рж╕ржм ржлрж┐рж▓рзНржб ржЪрзЗржХ ржПржмржВ ржПрж░рж░ ржорзЗрж╕рзЗржЬ
  тАв **рж▓рзЛржбрж┐ржВ рж╕рзНржЯрзЗржЯ:** ржмрж╛ржЯржи ржбрж┐рж╕рзЗржмрж▓ ржПржмржВ рж▓рзЛржбрж┐ржВ ржЯрзЗржХрзНрж╕ржЯ
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рж╕рзНржЯрзЗржЯ:**
```javascript
const [mode, setMode] = useState(initialMode); // login/register
const [email, setEmail] = useState('');
const [password, setPassword] = useState('');
const [name, setName] = useState('');
const [showPassword, setShowPassword] = useState(false);
const [loading, setLoading] = useState(false);
```
- **ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж╛ржВрж╢ржи:**
```javascript
const handleSubmit = async () => {
  // ржлрж░рзНржо ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи
  if (!trimmedEmail || !trimmedPassword || (!isLogin && !trimmedName)) {
    Alert.alert('Error', 'Please fill in all fields');
    return;
  }
  
  // ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржорзНржпрж╛ржЪ ржЪрзЗржХ
  if (!isLogin && trimmedPassword !== trimmedConfirmPassword) {
    Alert.alert('Error', 'Passwords do not match');
    return;
  }
  
  // API ржХрж▓
  const result = isLogin
    ? await login(trimmedEmail, trimmedPassword)
    : await register(trimmedEmail, trimmedPassword, trimmedName);
};
```
- **UI ржХржорзНржкрзЛржирзЗржирзНржЯ:**
  тАв **TextInput:** ржЗржорзЗржЗрж▓, ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб, ржирж╛ржо ржЗржиржкрзБржЯ
  тАв **TouchableOpacity:** ржмрж╛ржЯржи ржПржмржВ ржЯржЧрж▓
  тАв **Ionicons:** ржЖржЗржХржи (ржорзЗржЗрж▓, рж▓ржХ, ржЖржЗ, ржЪрзЗржХржорж╛рж░рзНржХ)
  тАв **Alert:** ржПрж░рж░ ржорзЗрж╕рзЗржЬ ржкрзНрж░ржжрж░рзНрж╢ржи
  тАв **Image:** рж╣рзЗржбрж╛рж░ рж▓рзЛржЧрзЛ
- **рж╕рзНржЯрж╛ржЗрж▓рж┐ржВ ржлрж┐ржЪрж╛рж░:**
  тАв **рж╢рзНржпрж╛ржбрзЛ:** ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржбрзЗ elevation/shadow
  тАв **рж░рж╛ржЙржирзНржбрзЗржб ржХрж░рзНржирж╛рж░:** borderRadius: 12
  тАв **рж░рзЗрж╕ржкржирзНрж╕рж┐ржн:** KeyboardAvoidingView
  тАв **ржерж┐ржо:** рж▓рж╛ржЗржЯ ржерж┐ржо ржХрж╛рж▓рж╛рж░ рж╕рзНржХрж┐ржо

### FilterModal.jsx (ржлрж┐рж▓рзНржЯрж╛рж░ ржорзЛржбрж╛рж▓)
- **ржХрж┐ ржХрж░рзЗ:** ржмржЗ ржлрж┐рж▓рзНржЯрж╛рж░ ржХрж░рж╛рж░ ржЕржкрж╢ржи ржжрзЗржпрж╝
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** ржЗржЙржЬрж╛рж░ ржпрж╛рждрзЗ рж╕рж╣ржЬрзЗ ржмржЗ ржЦрзБржБржЬрждрзЗ ржкрж╛рж░рзЗ
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв Modal ржХржорзНржкрзЛржирзЗржирзНржЯ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ
  тАв ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐, ржнрж╛рж╖рж╛, ржкрзНрж░ржХрж╛рж╢ржХ ржЗрждрзНржпрж╛ржжрж┐ ржлрж┐рж▓рзНржЯрж╛рж░ ржжрзЗржпрж╝
  тАв useBookFilters рж╣рзБржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ

### ThemeContext.jsx (ржерж┐ржо ржХржиржЯрзЗржХрзНрж╕ржЯ)
- **ржХрж┐ ржХрж░рзЗ:** ржбрж╛рж░рзНржХ/рж▓рж╛ржЗржЯ ржерж┐ржо рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
- **ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░:** ржЗржЙржЬрж╛рж░ ржкрзНрж░рзЗржлрж╛рж░рзЗржирзНрж╕ ржЕржирзБржпрж╛ржпрж╝рзА ржерж┐ржо ржкрж░рж┐ржмрж░рзНрждржи
- **ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:**
  тАв AsyncStorage ржжрж┐ржпрж╝рзЗ ржерж┐ржо рж╕рзЗржЯрж┐ржВрж╕ рж╕рзЗржн ржХрж░рзЗ
  тАв useState ржжрж┐ржпрж╝рзЗ currentTheme рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬ ржХрж░рзЗ
  тАв рж╕ржм ржХржорзНржкрзЛржирзЗржирзНржЯрзЗ ржерж┐ржо ржбрзЗржЯрж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗ

## рзк. Node Modules ржУ Packages

### ржорзВрж▓ ржбрж┐ржкрзЗржирзНржбрзЗржирзНрж╕рж┐:

**@react-navigation/native** (^7.1.17)
- **ржХрж┐ ржХрж░рзЗ:** рж╕рзНржХрзНрж░рж┐ржи ржирзЗржнрж┐ржЧрзЗрж╢ржи
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** ржПржХ рж╕рзНржХрзНрж░рж┐ржи ржерзЗржХрзЗ ржЕржирзНржп рж╕рзНржХрзНрж░рж┐ржирзЗ ржпрж╛ржУржпрж╝рж╛рж░ ржЬржирзНржп
- **ржмрзНржпржмрж╣рж╛рж░:** `NavigationContainer` ржПржмржВ `Stack.Navigator`

**@react-navigation/bottom-tabs** (^7.4.6)
- **ржХрж┐ ржХрж░рзЗ:** ржирж┐ржЪрзЗрж░ ржЯрзНржпрж╛ржм ржирзЗржнрж┐ржЧрзЗрж╢ржи
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** рж╣рзЛржо, ржлрзЗржнрж╛рж░рж┐ржЯ, рж╕рзЗржЯрж┐ржВрж╕ ржЯрзНржпрж╛ржм
- **ржмрзНржпржмрж╣рж╛рж░:** `createBottomTabNavigator()`

**appwrite** (^18.2.0)
- **ржХрж┐ ржХрж░рзЗ:** ржмрзНржпрж╛ржХржПржирзНржб API рж╕рж╛рж░рзНржнрж┐рж╕
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** ржбрзЗржЯрж╛ рж╕рзНржЯрзЛрж░ ржПржмржВ ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи
- **ржмрзНржпржмрж╣рж╛рж░:** `Client`, `Account`, `Databases`, `Storage`

**react-native-pdf** (^6.7.7)
- **ржХрж┐ ржХрж░рзЗ:** PDF ржлрж╛ржЗрж▓ ржнрж┐ржЙ
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** ржмржЗ ржкржбрж╝рж╛рж░ ржЬржирзНржп
- **ржмрзНржпржмрж╣рж╛рж░:** `PdfViewerScreen` ржП

**@react-native-async-storage/async-storage** (^2.2.0)
- **ржХрж┐ ржХрж░рзЗ:** рж▓рзЛржХрж╛рж▓ ржбрзЗржЯрж╛ рж╕рзНржЯрзЛрж░
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** ржЗржЙржЬрж╛рж░ ржкрзНрж░рзЗржлрж╛рж░рзЗржирзНрж╕ рж╕рзЗржн
- **ржмрзНржпржмрж╣рж╛рж░:** ржерж┐ржо рж╕рзЗржЯрж┐ржВрж╕ рж╕рзЗржн

**react-native-vector-icons** (^10.3.0)
- **ржХрж┐ ржХрж░рзЗ:** ржЖржЗржХржи ржкрзНрж░ржжрж░рзНрж╢ржи
- **ржХрзЗржи ржкрзНрж░ржпрж╝рзЛржЬржи:** UI ржЖржЗржХржи
- **ржмрзНржпржмрж╣рж╛рж░:** рж╕ржм рж╕рзНржХрзНрж░рж┐ржирзЗ ржЖржЗржХржи ржжрзЗржЦрж╛ржирзЛрж░ ржЬржирзНржп

## рзл. ржорзВрж▓ React Native ржХржирж╕рзЗржкрзНржЯ

### State Management (рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ)
```javascript
const [books, setBooks] = useState([]);
const [loading, setLoading] = useState(false);
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** ржХржорзНржкрзЛржирзЗржирзНржЯрзЗрж░ ржбрзЗржЯрж╛ рж╕рзНржЯрзЛрж░ ржХрж░рзЗ, ржпржЦржи ржкрж░рж┐ржмрж░рзНрждржи рж╣ржпрж╝ рждржЦржи UI ржЖржкржбрзЗржЯ рж╣ржпрж╝

### Props (ржкрзНрж░ржкрж╕)
```javascript
export default function HomeScreen({ navigation }) {
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** ржкрзНржпрж╛рж░рзЗржирзНржЯ ржерзЗржХрзЗ ржЪрж╛ржЗрж▓рзНржб ржХржорзНржкрзЛржирзЗржирзНржЯрзЗ ржбрзЗржЯрж╛ ржкрж╛рж╕ ржХрж░рзЗ

### Navigation (ржирзЗржнрж┐ржЧрзЗрж╢ржи)
```javascript
navigation.navigate('BookDetails', { bookId: book.id });
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** ржПржХ рж╕рзНржХрзНрж░рж┐ржи ржерзЗржХрзЗ ржЕржирзНржп рж╕рзНржХрзНрж░рж┐ржирзЗ ржпрж╛ржУржпрж╝рж╛рж░ рж╕рж┐рж╕рзНржЯрзЗржо

### Context API (ржХржиржЯрзЗржХрзНрж╕ржЯ API)
```javascript
const { user } = useAuth();
const { theme } = useTheme();
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** ржкрзБрж░рзЛ ржЕрзНржпрж╛ржкрзЗ ржбрзЗржЯрж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп

### Custom Hooks (ржХрж╛рж╕рзНржЯржо рж╣рзБржХрж╕)
```javascript
export const useAuth = () => {
  const ctx = useContext(AuthContext);
  return ctx;
};
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** рж▓ржЬрж┐ржХ ржкрзБржирж░рзНржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп

### Async/Await (ржЕрзНржпрж╛рж╕рж┐ржЩрзНржХ/ржЕрзНржпрж╛ржУржпрж╝рзЗржЯ)
```javascript
const loadBooks = async () => {
  try {
    const result = await listBooks();
    setBooks(result);
  } catch (error) {
    console.error(error);
  }
};
```
**ржмрзНржпрж╛ржЦрзНржпрж╛:** API ржХрж▓ ржХрж░рж╛рж░ ржЬржирзНржп ржЕрзНржпрж╛рж╕рж┐ржЩрзНржХрзНрж░рзЛржирж╛рж╕ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ

## рзм. рж╕рж╛ржзрж╛рж░ржг ржкрж░рзАржХрзНрж╖рж╛рж░ ржкрзНрж░рж╢рзНржи ржУ ржЙрждрзНрждрж░

### ржкрзНрж░рж╢рзНржи: ржХрзЗржи useState ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ?
**ржЙрждрзНрждрж░:** ржХржорзНржкрзЛржирзЗржирзНржЯрзЗрж░ ржбрзЗржЯрж╛ рж╕рзНржЯрзЛрж░ ржХрж░рж╛рж░ ржЬржирзНржпред ржпржЦржи ржбрзЗржЯрж╛ ржкрж░рж┐ржмрж░рзНрждржи рж╣ржпрж╝, React ржЕржЯрзЛржорзЗржЯрж┐ржХ UI ржЖржкржбрзЗржЯ ржХрж░рзЗред

### ржкрзНрж░рж╢рзНржи: Appwrite ржХрж┐ ржПржмржВ ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ?
**ржЙрждрзНрждрж░:** Appwrite ржПржХржЯрж┐ Backend-as-a-Service (BaaS)ред ржПржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ ржХрж╛рж░ржг:
- ржбрзЗржЯрж╛ржмрзЗрж╕ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ рж╕рж╣ржЬ
- ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж╕рж┐рж╕рзНржЯрзЗржо ржЖржЫрзЗ
- ржлрж╛ржЗрж▓ рж╕рзНржЯрзЛрж░рзЗржЬ ржЖржЫрзЗ
- API ржХрж▓ рж╕рж╣ржЬ

### ржкрзНрж░рж╢рзНржи: Context API ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ?
**ржЙрждрзНрждрж░:** ржкрзБрж░рзЛ ржЕрзНржпрж╛ржкрзЗ ржбрзЗржЯрж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржпред Props drilling ржПржбрж╝рж╛ржирзЛрж░ ржЬржирзНржпред

### ржкрзНрж░рж╢рзНржи: CustomTabBar ржлрж╛ржЗрж▓ ржХрзЗржи ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг?
**ржЙрждрзНрждрж░:** ржПржЯрж┐ ржЕрзНржпрж╛ржкрзЗрж░ ржирж┐ржЪрзЗрж░ ржирзЗржнрж┐ржЧрзЗрж╢ржи ржмрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗред ржПржЯрж┐ ржирж╛ ржерж╛ржХрж▓рзЗ ржЗржЙржЬрж╛рж░ рж╕рзНржХрзНрж░рж┐ржи ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛ред

### ржкрзНрж░рж╢рзНржи: ржпржжрж┐ AuthContext рж╕рж░рж┐ржпрж╝рзЗ ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝ рждрж╛рж╣рж▓рзЗ ржХрж┐ рж╣ржмрзЗ?
**ржЙрждрзНрждрж░:** ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи рж╕рзНржЯрзЗржЯ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛, рж╕ржм рж╕рзНржХрзНрж░рж┐ржирзЗ рж▓ржЧржЗржи ржЪрзЗржХ ржХрж░рждрзЗ рж╣ржмрзЗред

### ржкрзНрж░рж╢рзНржи: useAuth рж╣рзБржХ ржХрж┐ ржХрж░рзЗ?
**ржЙрждрзНрждрж░:** AuthContext ржерзЗржХрзЗ ржЗржЙржЬрж╛рж░ ржбрзЗржЯрж╛ ржПржмржВ ржлрж╛ржВрж╢ржи (login, logout) ржкрзЗрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред

### ржкрзНрж░рж╢рзНржи: FlatList ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ?
**ржЙрждрзНрждрж░:** ржмржбрж╝ рж▓рж┐рж╕рзНржЯрзЗрж░ ржЬржирзНржп ржкрж╛рж░ржлрж░ржорзНржпрж╛ржирзНрж╕ ржнрж╛рж▓рзЛред ScrollView ржПрж░ ржЪрзЗржпрж╝рзЗ ржорзЗржорж░рж┐ ржХржо ржЦрж░ржЪ ржХрж░рзЗред

### ржкрзНрж░рж╢рзНржи: AsyncStorage ржХрж┐ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрзЗ?
**ржЙрждрзНрждрж░:** ржбрж┐ржнрж╛ржЗрж╕рзЗ ржбрзЗржЯрж╛ рж╕рзЗржн ржХрж░рзЗред ржЕрзНржпрж╛ржк ржмржирзНржз рж╣ржУржпрж╝рж╛рж░ ржкрж░рзЗржУ ржбрзЗржЯрж╛ ржерж╛ржХрзЗред

## рзн. ржмрзЗрж╕рзНржЯ ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕

### ржХрзЛржб ржЕрж░ржЧрж╛ржирж╛ржЗржЬрзЗрж╢ржи:
тАв **ржлрзЛрж▓рзНржбрж╛рж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░:** ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржВрж╢ржирж╛рж▓рж┐ржЯрж┐ ржЖрж▓рж╛ржжрж╛ ржлрзЛрж▓рзНржбрж╛рж░рзЗ
тАв **ржлрж╛ржЗрж▓ ржирзЗржорж┐ржВ:** ржХрзНржпрж╛ржорзЗрж▓ржХрзЗрж╕ (camelCase) ржмрзНржпржмрж╣рж╛рж░
тАв **ржХржорзНржкрзЛржирзЗржирзНржЯ рж╕рзЗржкрж╛рж░рзЗрж╢ржи:** ржЫрзЛржЯ ржЫрзЛржЯ ржХржорзНржкрзЛржирзЗржирзНржЯрзЗ ржнрж╛ржЧ

### рж╕рзНржЯрзЗржЯ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ:
тАв **Context API:** ржЧрзНрж▓рзЛржмрж╛рж▓ рж╕рзНржЯрзЗржЯрзЗрж░ ржЬржирзНржп
тАв **useState:** рж▓рзЛржХрж╛рж▓ рж╕рзНржЯрзЗржЯрзЗрж░ ржЬржирзНржп
тАв **useEffect:** рж╕рж╛ржЗржб ржЗржлрзЗржХрзНржЯрзЗрж░ ржЬржирзНржп

### ржПрж░рж░ рж╣рзНржпрж╛ржирзНржбрж▓рж┐ржВ:
```javascript
try {
  const result = await apiCall();
} catch (error) {
  console.error('Error:', error);
}
```

### ржкрж╛рж░ржлрж░ржорзНржпрж╛ржирзНрж╕:
тАв **FlatList:** ржмржбрж╝ рж▓рж┐рж╕рзНржЯрзЗрж░ ржЬржирзНржп
тАв **useMemo:** ржХрж╕рзНржЯрж▓рж┐ ржХрзНржпрж╛рж▓ржХрзБрж▓рзЗрж╢ржирзЗрж░ ржЬржирзНржп
тАв **useCallback:** ржлрж╛ржВрж╢ржи ржорзЗржорзЛржЗржЬрзЗрж╢ржирзЗрж░ ржЬржирзНржп

### рж╕рж┐ржХрж┐ржЙрж░рж┐ржЯрж┐:
тАв **API Keys:** ржХржиржлрж┐ржЧ ржлрж╛ржЗрж▓рзЗ рж╕рзЗржн
тАв **ржЯрзЛржХрзЗржи ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ:** рж╕рзЗрж╢ржи ржЯрзЛржХрзЗржи рж╕рзЗржн
тАв **ржЗржиржкрзБржЯ ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи:** ржЗржЙржЬрж╛рж░ ржЗржиржкрзБржЯ ржЪрзЗржХ

## рзо. ржкрзНрж░ржЬрзЗржХрзНржЯ рж░рж╛ржи ржХрж░рж╛рж░ ржирж┐ржпрж╝ржо

```bash
# ржбрж┐ржкрзЗржирзНржбрзЗржирзНрж╕рж┐ ржЗржирж╕рзНржЯрж▓
npm install

# Android ржПрж░ ржЬржирзНржп
npm run android

# iOS ржПрж░ ржЬржирзНржп  
npm run ios

# ржорзЗржЯрзНрж░рзЛ рж╕рж╛рж░рзНржнрж╛рж░
npm start
```

## рзп. ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж╛ржЗрж▓рж╕ржорзВрж╣

1. **App.jsx** - ржорзВрж▓ ржЕрзНржпрж╛ржк ржПржирзНржЯрзНрж░рж┐
2. **constants/Config.js** - ржЕрзНржпрж╛ржкрж░рж╛ржЗржЯ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
3. **lib/appwrite.js** - ржЕрзНржпрж╛ржкрж░рж╛ржЗржЯ ржХрзНрж▓рж╛ржпрж╝рзЗржирзНржЯ
4. **context/AuthContext.jsx** - ржЕржерзЗржиржЯрж┐ржХрзЗрж╢ржи рж▓ржЬрж┐ржХ
5. **services/bookService.js** - ржмржЗ API ржХрж▓
6. **screens/HomeScreen.jsx** - ржорзВрж▓ рж╕рзНржХрзНрж░рж┐ржи

## рззрзж. ржкрж░рзАржХрзНрж╖рж╛рж░ ржЬржирзНржп ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржкржпрж╝рзЗржирзНржЯ

тАв **React Native CLI vs Expo:** CLI ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ
тАв **Navigation:** React Navigation ржмрзНржпржмрж╣рж╛рж░
тАв **State Management:** Context API + useState
тАв **Backend:** Appwrite BaaS
тАв **File Storage:** PDF ржПржмржВ ржЗржорзЗржЬ рж╕рзНржЯрзЛрж░
тАв **Authentication:** Email/Password + JWT
тАв **UI Components:** Custom TabBar, Modal, FlatList
тАв **Error Handling:** Try-catch ржмрзНрж▓ржХ
тАв **Performance:** useMemo, useCallback, FlatList
тАв **Security:** API key protection, session management

ржПржЗ ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи ржЖржкржирж╛рж░ ржкрж░рзАржХрзНрж╖рж╛рж░ ржЬржирзНржп ржпржерзЗрж╖рзНржЯред ржкрзНрж░рждрж┐ржЯрж┐ ржХржирж╕рзЗржкрзНржЯ рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
